# Generated by Django 5.2.5 on 2025-08-13 13:09

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('challenges', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name='challenge',
            name='category',
        ),
        migrations.AddField(
            model_name='challenge',
            name='categories',
            field=models.ManyToManyField(related_name='challenges', to='challenges.challengecategory'),
        ),
        migrations.AddField(
            model_name='challenge',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_challenges', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='challenge',
            name='duration_minutes',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='challenge',
            name='end_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='challenge',
            name='estimated_completion_time',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='challenge',
            name='is_collaborative',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='challenge',
            name='is_published',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='challenge',
            name='learning_outcomes',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='challenge',
            name='max_score',
            field=models.FloatField(default=100.0),
        ),
        migrations.AddField(
            model_name='challenge',
            name='max_submissions',
            field=models.IntegerField(default=1),
        ),
        migrations.AddField(
            model_name='challenge',
            name='max_team_size',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='challenge',
            name='prerequisite_description',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='challenge',
            name='skill_tags',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='challenge',
            name='start_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='challenge',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='challengeattachment',
            name='is_required',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='challengecategory',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name='task',
            name='expected_output',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='task',
            name='is_mandatory',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='task',
            name='max_score',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='task',
            name='test_cases',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='task',
            name='time_limit_minutes',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='challenge',
            name='challenge_type',
            field=models.CharField(choices=[('coding', 'Coding'), ('design', 'Design'), ('document', 'Document'), ('data_analysis', 'Data Analysis'), ('case_study', 'Case Study'), ('presentation', 'Presentation'), ('quiz', 'Quiz'), ('simulation', 'Simulation'), ('creative_writing', 'Creative Writing'), ('project_management', 'Project Management'), ('financial_analysis', 'Financial Analysis'), ('marketing_campaign', 'Marketing Campaign'), ('sales_pitch', 'Sales Pitch'), ('hr_strategy', 'HR Strategy'), ('research', 'Research'), ('video_production', 'Video Production'), ('consulting', 'Consulting'), ('product_design', 'Product Design'), ('other', 'Other')], max_length=50),
        ),
        migrations.AlterField(
            model_name='challenge',
            name='difficulty',
            field=models.CharField(choices=[('beginner', 'Beginner'), ('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard'), ('expert', 'Expert')], max_length=20),
        ),
        migrations.AlterField(
            model_name='challenge',
            name='visibility',
            field=models.CharField(choices=[('public', 'Public'), ('company', 'Company-Specific'), ('group', 'Group-Specific')], default='public', max_length=20),
        ),
        migrations.CreateModel(
            name='ChallengeFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('rating', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='challenges.challenge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChallengeGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_role_based', models.BooleanField(default=True)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='challenges.challenge')),
            ],
        ),
        migrations.CreateModel(
            name='ChallengePrerequisite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('required_score', models.FloatField(blank=True, null=True)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prerequisites', to='challenges.challenge')),
                ('prerequisite_challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dependent_challenges', to='challenges.challenge')),
            ],
        ),
        migrations.CreateModel(
            name='ChallengeRubric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criterion', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('max_score', models.FloatField()),
                ('weight', models.FloatField(default=1.0)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rubrics', to='challenges.challenge')),
            ],
        ),
    ]
